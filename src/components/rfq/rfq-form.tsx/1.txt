<div className="space-y-4">
          <div className="flex flex-row items-center border-b pb-2 space-x-2">
            <Info className="w-8 h-8" />
            <h3 className="scroll-m-20 text-3xl font-semibold tracking-tight first:mt-0">
              {t("main")}
            </h3>
          </div>
          
        </div>
        <div className="space-y-4">
          <div className="flex flex-row items-center border-b pb-2 space-x-2">
            <Phone className="w-8 h-8" />
            <h3 className="scroll-m-20 text-3xl font-semibold tracking-tight first:mt-0">
              {t("contacts")}
            </h3>
          </div>
          {/* Contact person*/}
          <FormField
            control={form.control}
            name="contactPerson"
            render={({ field }) => (
              <FormItem>
                <FormLabel>{t("contactPerson")}</FormLabel>
                <FormControl>
                  <Input {...field} autoComplete="off" />
                </FormControl>
                <FormMessage />
              </FormItem>
            )}
          />
          {/* Email*/}
          <FormField
            control={form.control}
            name="email"
            render={({ field }) => (
              <FormItem>
                <FormLabel>{t("email")}</FormLabel>
                <FormControl>
                  <Input {...field} autoComplete="off" />
                </FormControl>
                <FormMessage />
              </FormItem>
            )}
          />
          {/* Phone*/}
          <FormField
            control={form.control}
            name="phone"
            render={({ field }) => (
              <FormItem>
                <FormLabel>{t("phone")}</FormLabel>
                <FormControl>
                  <PhoneNumberInput
                    {...field}
                    inputComponent={Input}
                    international
                    autoComplete="off"
                    data-test="phone"
                  />
                </FormControl>
                <FormMessage />
              </FormItem>
            )}
          />
        </div>
        {/* Items */}
        <div className="space-y-4">
          <div className="flex flex-row items-center border-b pb-2 space-x-2">
            <Package className="w-8 h-8" />
            <h3 className="scroll-m-20 text-3xl font-semibold tracking-tight first:mt-0">
              {`${t("items")} (${form.getValues("items")?.length || 0})`}
            </h3>
          </div>
          {items.fields.map((productField, index) => (
            <RFQItem
              key={index}
              productField={productField}
              index={index}
              removeProduct={() => {
                items.remove(index);
              }}
            />
          ))}
          <FormMessage>
            {(form.formState.errors.items &&
              form.formState.errors.items.message) ||
              ""}
          </FormMessage>
          <div className="flex justify-center items-center">
            <Button
              type="button"
              className="space-x-2"
              onClick={() =>
                items.append({
                  productName: "",
                  quantity: 0,
                  price: 0,
                  deliveryDate: new Date(),
                  comment: "",
                })
              }
            >
              <Plus />
              <span>{t("addItem")}</span>
            </Button>
          </div>
        </div>
        <div className="space-y-4">
          <div className="flex flex-row items-center border-b pb-2 space-x-2">
            <Text className="w-8 h-8" />
            <h3 className="scroll-m-20 text-3xl font-semibold tracking-tight first:mt-0">
              {t("additional")}
            </h3>
          </div>
          
          {/* Public */}
          <div className="relative">
            <FormField
              control={form.control}
              name="privateRequest"
              render={({ field }) => (
                <FormItem className="flex flex-row items-center justify-between rounded-lg border p-3 shadow-sm">
                  <div className="space-y-0.5">
                    <FormLabel>{t("makePrivate")}</FormLabel>
                    <FormDescription>{t("makePrivateHint")}</FormDescription>
                  </div>
                  <FormControl>
                    <Switch
                      checked={field.value}
                      onCheckedChange={field.onChange}
                    />
                  </FormControl>
                </FormItem>
              )}
            />
          </div>
        </div>
        <Button type="submit" disabled={loading} className="w-full space-x-2">
          <CheckCircle2 />
          <span>{update ? t("update") : t("create")}</span>
        </Button>